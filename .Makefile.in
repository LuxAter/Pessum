RED = \033[0;31m
GREEN = \033[0;32m
YELLOW = \033[0;33m
BLUE = \033[0;34m
MAGENTA = \033[0;35m
CYAN = \033[0;36m
WHITE = \033[0;37m
NO_COLOR = \033[m

define FindLongestFile
$(shell \
  max=0; \
  for file in `find $(1) -type f -exec basename {} \;`; do \
    len=$${#file}; \
    if [ $$len -gt $$max ]; then \
      max=$$len; \
    fi; \
  done; \
  echo $$max
)
endef

define Line = 
$(shell printf '%0.1s' "$(2)"{1..$(1)})
endef
export Line


define Length
$(shell var=$(1); printf "$${#var}")
endef

define Print
var="$(1)"; \
    width="$(2)";\
    printf '%s%*.*s' "$$var" 0 $$(($$width - $${#var})) "$(call Line,$(2),.)"
endef

define PrintCpp
var="$(1)"; \
    var=$${var%.*}.cpp; \
    width="$(2)";\
    printf '%s%*.*s' "$$var" 0 $$(($$width - $${#var})) "$(call Line,$(2),.)"
endef

define Compile
mkdir -p $(@D)
if [[ $(2) == Linking ]]; then \
  $(call Print,$(2) $(@F),$(SOURCE_WIDTH)); \
else \
  $(call PrintCpp,$(2) $(@F),$(SOURCE_WIDTH)); \
fi
$(1) 2> $@.log; \
  RESULT=$$?; \
  if [ $$RESULT -ne 0 ]; then \
    $(cross); \
  else \
    $(check); \
  fi; \
  cat $@.log; \
  rm -f $@.log
endef

define Subdir
path=$(shell pwd); \
     base_path=$(BASE_PATH)
     path="$(NAME)$${path#$$base_path}/$(1):"; \
     printf "%b%s%b\n" "$(WHITE)" "$$path" "$(NO_COLOR)"
cd $(1) && $(MAKE)
endef

define check =
  printf "%b\n" "$(OK_COLOR)\xE2\x9C\x94 $(NO_COLOR)"
endef

define cross =
  printf "%b\n" "$(ERR_COLOR)\xE2\x9D\x8C $(NO_COLOR)"
endef
